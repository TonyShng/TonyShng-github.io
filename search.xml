<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span> </span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a> </p>
]]></content>
  </entry>
  <entry>
    <title>Chapter1:Hello，World</title>
    <url>/2021/04/15/Chapter1-Hello-World/</url>
    <content><![CDATA[<p>欢迎，你将要开启一个如何使用 <a href="https://www.python.org/">Python</a> 和 <a href="https://flask.palletsprojects.com/en/1%E3%80%821%E3%80%82x/">Flask</a> 框架创建 web应用程序的学习之旅。在第一章，你将会学习如何去新建一个 Flask项目。在本章结束时，你将会在你的电脑上运行一个简单的 Flask Web应用！</p>
<p><em>本章节的 GitHub链接: <a href="https://github.com/miguelgrinberg/microblog/tree/v0%E3%80%821">Browse</a>，<a href="https://github.com/miguelgrinberg/microblog/archive/v0%E3%80%821%E3%80%82zip">Zip</a>，<a href="https://github.com/miguelgrinberg/microblog/compare/v0%E3%80%820%E3%80%82%E3%80%82%E3%80%82v0%E3%80%821">Diff</a>。</em></p>
<h3 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h3><p>如果你没有在你的电脑上安装 Python ，那么现在就开始安装吧！如果你的操作系统没有提供 Python 包，你可以通过 <a href="https://www.python.org/downloads/">Python 官方网站</a> 来下载进行安装。如果你使用 Microsoft Windows 操作系统与WSL或者 Cygwin，请注意你不应使用 Windows 版本的 Python，而是一个能够支持 Ubuntu(如果你使用的是WSL) 或者 Cygwin 的 Unix 版本。</p>
<p>为了确保你安装的 Python 是可运行的，你可以打开终端窗口并输入 <code>python3</code> ，如果这不起作用的话，就试试 <code>python</code> 。以下就是应该呈现的效果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python3</span></span><br><span class="line">Python 3.9.2 (default, Mar 15 2021, 17:37:51)</span><br><span class="line">[Clang 12.0.0 (clang-1200.0.32.29)] on darwin</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt;</span> </span><br></pre></td></tr></table></figure>

<p>Python解释器现在正等待一个交互式提醒，你可以在这里输入 Python 语句。在接下来的几章，你将会了解到这种交互式提醒是非常有用的。但是现在，你已经通过这个确认了你的系统上安装了 Python。退出这个交互式解释器，你可以输入 <code>exit()</code> 加 Enter 键。在 Linux 和 Mac 系统上你也可以通过 Ctrl-D 快捷键来退出解释器。在 Windows 上，可以使用 Ctrl-Z 加 Enter键来退出。</p>
<h3 id="Installing-Flask"><a href="#Installing-Flask" class="headerlink" title="Installing Flask"></a>Installing Flask</h3><p>接下来的步骤是安装 Flask，但是在此之前我想告诉你关于如何安装 Python 包的最佳实践。</p>
<p>在 Python 中，像 Flask 这样的包是支持公共仓库的，任何人都可以下载并安装它们。官方 Python 包仓库叫做 <a href="https://pypi.org/">PyPI</a> ，表示 Python Package Index 的缩写(有些人也将这个仓库戏称为”cheese shop”)。在 PyPI 上安装第三方包非常简单，因为 Python 专门提供了一个名为 <code>pip</code> 的工具来做这个工作(在 Python 2.7中 <code>pip</code> 没有被集成，需要单独安装)。</p>
<p>在你的电脑上安装第三方包，你可以像下面这样使用 <code>pip</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install &lt;package-name&gt;</span></span><br></pre></td></tr></table></figure>

<p>有趣的是，在大多数情况下安装第三方包的这个方法不会有效。如果你在你电脑上安装的全局的 Python解释器，很可能你的普通账号没有权限去修改它，因此只有一种方法让上面的命令工作就是通过管理员账号运行。但是即使没有这种复杂的情况，也要思考下你用上述方法安装第三方包时会发生什么。<code>pip</code> 工具会从 PyPI 上下载包，然后添加到 Python 的安装中。从这时起，在你系统上的每个 Python 脚本都可以访问这个包。 想象一下这样一个情况当你用当时最新的版本 Flask 0.11版本完成了一个 web 应用，但是现在已经支持 0.12版本了。你现在想用 0.12版本开始做第二个应用，但是替换掉0.11版本会让老的程序无法运行。现在你看到问题了么？现在解决方法是为老的应用安装 0.11版本的 Flask，为新的应用安装0.12版本的Flask。</p>
<p>To address the issue of</p>
]]></content>
      <categories>
        <category>Flask</category>
      </categories>
      <tags>
        <tag>Flask</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
